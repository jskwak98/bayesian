x_marginal <- apply(xy_joint, 1, sum)
sample_x_marginal
x_marginal
rm(list=ls())
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
dimnames(xy_joint)[[1]]<-0:2
dimnames(xy_joint)[[2]]<-0:1
y_pmf <- apply(xy_joint, 2, sum)
rejection_sampling <- function(pmf){
repeat{
y <- rbinom(1, 1, 0.5)
v <- runif(1)
M <- max(pmf)/0.5
if (v < pmf[y + 1] / (M * dbinom(y, 1, 0.5)))
break
}
return(y)
}
nsim <- 10^4
set.seed(17)
rejection_sampled_Y <- replicate(nsim, rejection_sampling(y_pmf))
table(rejection_sampled_Y)/nsim
table(y_pmf)
## 2-(a) ##
rm(list=ls())
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
dimnames(xy_joint)[[1]]<-0:2
dimnames(xy_joint)[[2]]<-0:1
y_pmf <- apply(xy_joint, 2, sum)
rejection_sampling <- function(pmf){
repeat{
y <- rbinom(1, 1, 0.5)
v <- runif(1)
M <- max(pmf)/0.5
if (v < pmf[y + 1] / (M * dbinom(y, 1, 0.5)))
break
}
return(y)
}
nsim <- 10^4
set.seed(17)
rejection_sampled_Y <- replicate(nsim, rejection_sampling(y_pmf))
table(rejection_sampled_Y)/nsim
y_pmf
## 2-(b) ##
rm(list=ls())
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
dimnames(xy_joint)[[1]]<-0:2
dimnames(xy_joint)[[2]]<-0:1
moc_discrete_sampling <- function(xy_joint, nsim){
xy_sample_pairs <- matrix(0, nsim, 2)
y_pmf <- apply(xy_joint, 2, sum)
for (i in 1:nsim){
y <- sample(0:1, 1, prob=y_pmf)
x <- sample(0:2, 1, prob=xy_joint[,y+1]/y_pmf[y+1])
xy_sample_pairs[i,] <- c(x, y)
}
return(xy_sample_pairs)
}
set.seed(17)
nsim <- 10^4
xy_sample <- data.frame(moc_discrete_sampling(xy_joint, nsim))
sample_joint <- matrix(table(xy_sample)/nsim, 3, 2)
sample_x_marginal <- apply(sample_joint, 1, sum)
x_marginal <- apply(xy_joint, 1, sum)
sample_x_marginal
x_marginal
## 2-(b) ##
rm(list=ls())
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
dimnames(xy_joint)[[1]]<-0:2
dimnames(xy_joint)[[2]]<-0:1
moc_discrete_sampling <- function(xy_joint, nsim){
xy_sample_pairs <- matrix(0, nsim, 2)
y_pmf <- apply(xy_joint, 2, sum)
for (i in 1:nsim){
y <- sample(0:1, 1, prob=y_pmf)
x <- sample(0:2, 1, prob=xy_joint[,y+1]/y_pmf[y+1])
xy_sample_pairs[i,] <- c(x, y)
}
return(xy_sample_pairs)
}
set.seed(17)
nsim <- 10^4
xy_sample <- data.frame(moc_discrete_sampling(xy_joint, nsim))
sample_joint <- matrix(table(xy_sample)/nsim, 3, 2)
sample_x_marginal <- apply(sample_joint, 1, sum)
x_marginal <- apply(xy_joint, 1, sum)
table(sample_x_marginal)
x_marginal
dimnames(sample_x_marginal)[[2]] <- 0:2
dimnames(sample_x_marginal)[[1]] <- 0:2
x_marginal <- array(apply(xy_joint, 1, sum))
dimnames(sample_x_marginal)[[1]] <- 0:2
x_marginal <- array(apply(xy_joint, 1, sum))
dimnames(sample_x_marginal)[[1]] <- 0:2
sample_x_marginal <- array(apply(sample_joint, 1, sum))
dimnames(sample_x_marginal)[[1]] <- 0:2
sample_x_marginal
x_marginal
## 2-(b) ##
rm(list=ls())
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
dimnames(xy_joint)[[1]]<-0:2
dimnames(xy_joint)[[2]]<-0:1
moc_discrete_sampling <- function(xy_joint, nsim){
xy_sample_pairs <- matrix(0, nsim, 2)
y_pmf <- apply(xy_joint, 2, sum)
for (i in 1:nsim){
y <- sample(0:1, 1, prob=y_pmf)
x <- sample(0:2, 1, prob=xy_joint[,y+1]/y_pmf[y+1])
xy_sample_pairs[i,] <- c(x, y)
}
return(xy_sample_pairs)
}
set.seed(17)
nsim <- 10^4
xy_sample <- data.frame(moc_discrete_sampling(xy_joint, nsim))
sample_joint <- matrix(table(xy_sample)/nsim, 3, 2)
sample_x_marginal <- array(apply(sample_joint, 1, sum))
x_marginal <- apply(xy_joint, 1, sum)
dimnames(sample_x_marginal)[[2]] <- 0:2
sample_x_marginal <- matrix(apply(sample_joint, 1, sum))
x_marginal <- apply(xy_joint, 1, sum)
#dimnames(sample_x_marginal)[[2]] <- 0:2
sample_x_marginal
x_marginal
set.seed(17)
nsim <- 10^4
xy_sample <- data.frame(moc_discrete_sampling(xy_joint, nsim))
sample_joint <- matrix(table(xy_sample)/nsim, 3, 2)
sample_x_marginal <- matrix(apply(sample_joint, 1, sum),1,3)
x_marginal <- apply(xy_joint, 1, sum)
#dimnames(sample_x_marginal)[[2]] <- 0:2
sample_x_marginal
x_marginal
set.seed(17)
nsim <- 10^4
xy_sample <- data.frame(moc_discrete_sampling(xy_joint, nsim))
sample_joint <- matrix(table(xy_sample)/nsim, 3, 2)
sample_x_marginal <- matrix(apply(sample_joint, 1, sum),1,3)
x_marginal <- apply(xy_joint, 1, sum)
dimnames(sample_x_marginal)[[2]] <- 0:2
sample_x_marginal
x_marginal
set.seed(17)
nsim <- 10^4
xy_sample <- data.frame(moc_discrete_sampling(xy_joint, nsim))
sample_joint <- matrix(table(xy_sample)/nsim, 3, 2)
sample_x_marginal <- matrix(apply(sample_joint, 1, sum),1,3)
x_marginal <- apply(xy_joint, 1, sum)
dimnames(sample_x_marginal)[[2]] <- 0:2
dimnames(sample_x_marginal)[[1]] <- "probs"
sample_x_marginal
x_marginal
set.seed(17)
nsim <- 10^4
xy_sample <- data.frame(moc_discrete_sampling(xy_joint, nsim))
sample_joint <- matrix(table(xy_sample)/nsim, 3, 2)
sample_x_marginal <- matrix(apply(sample_joint, 1, sum),1,3)
x_marginal <- matrix(apply(xy_joint, 1, sum), 1, 3)
dimnames(sample_x_marginal)[[2]] <- 0:2
dimnames(sample_x_marginal)[[1]] <- "probs"
dimnames(x_marginal)[[2]] <- 0:2
dimnames(x_marginal)[[1]] <- "probs"
sample_x_marginal
x_marginal
rm(list=ls())
trans.mat <- function(A) {
n <- length(A[,1]); temp <- A
for (i in 1:n){ temp[i,] <- A[i,]/sum(A[i,])}
return(temp)}
gibbs_discrete <- function(pmat1, pmat2, i = 1, iter){
jointsamp<-matrix(0,iter,2);nX<-dim(pmat1)[1];nY<-dim(pmat2)[1]
for(k in 1:iter){
j <- sample(1:nX, 1, prob = pmat1[i, ])
i <- sample(1:nY, 1, prob = pmat2[j, ])
jointsamp[k, ] <- c(i, j)}
return(jointsamp)}
powermat <- function(mat,k) {
if (k == 0) return (diag(dim(mat)[1]))
if (k == 1) return(mat)
if (k > 1) return( mat %*% powermat(mat, k-1))
}
Pmat.YX <- trans.mat(jointpmf);
jointpmf<-matrix(c(3,3,2,1,3,3,3,2,2,3,3,3,1,2,3,3)/40,4,4,byrow=T)
dimnames(jointpmf)[[1]]<-1:4;dimnames(jointpmf)[[2]]<-1:4;jointpmf
Pmat.YX <- trans.mat(jointpmf);
Pmat.YX
rm(list=ls())
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
dimnames(xy_joint)[[1]]<-0:2
dimnames(xy_joint)[[2]]<-0:1
xy_joint[,1]
xy_joint[,2]
xy_joint[1,]
xy_joint[2,]
xy_joint[3,]
trans.mat <- function(A) {
n <- length(A[,1]); temp <- A
for (i in 1:n){ temp[i,] <- A[i,]/sum(A[i,])}
return(temp)}
trans.mat(xy_joint)
trans.mat(xy_joint.T)
xy_joint = matrix(xy_joint, 3, 2)
trans.mat(xy_joint)
trans.mat(xy_joint.T)
trans.mat(t(xy_joint))
rm(list=ls())
transition_matrix <- function(joint){
n <- length(joint[,1])
t_mat <- joint
for (i in 1:n){
t_mat[i,] <- joint[i,]/sum(joint[i,])
}
return(t_mat)
}
gibbs_sampling <- function(XtoY, YtoX, y = 1, iter){
gibbs_sampled <- matrix(0, iter, 2)
for(k in 1:iter){
x <- sample(0:2, 1, prob = XtoY[y+1,])
y <- sample(0:1, 1, prob = YtoX[x+1,])
gibbs_sampled <- c(x, y)
}
return(gibbs_sampled)
}
powermat <- function(mat,k) {
if (k == 0) return (diag(dim(mat)[1]))
if (k == 1) return(mat)
if (k > 1) return( mat %*% powermat(mat, k-1))
}
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
XtoY <- transition_matrix(t(xy_joint))
YtoX <- transition_matrix(xy_joint)
XtoY
YtoX
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
XtoY <- transition_matrix(t(xy_joint))
YtoX <- transition_matrix(xy_joint)
nburnin <- 3000
sample <- 10^4
iter <- nburnin + sample_x_marginal
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
XtoY <- transition_matrix(t(xy_joint))
YtoX <- transition_matrix(xy_joint)
nburnin <- 3000
nsample <- 10^4
iter <- nburnin + nsample
set.seed(17)
gibbs_sample_data <- data.frame(gibbs_sampling(XtoY, YtoX, iter))
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
XtoY <- transition_matrix(t(xy_joint))
YtoX <- transition_matrix(xy_joint)
nburnin <- 3000
nsample <- 10^4
iter <- nburnin + nsample
set.seed(17)
gibbs_sample_data <- data.frame(gibbs_sampling(XtoY, YtoX, 1, iter))
names(gibbs_sample_data)<-c("Y","X")
gibbs_sample_data
View(gibbs_sample_data)
rm(list=ls())
transition_matrix <- function(joint){
n <- length(joint[,1])
t_mat <- joint
for (i in 1:n){
t_mat[i,] <- joint[i,]/sum(joint[i,])
}
return(t_mat)
}
gibbs_sampling <- function(XtoY, YtoX, y = 1, iter){
gibbs_sampled <- matrix(0, iter, 2)
for(k in 1:iter){
x <- sample(0:2, 1, prob = XtoY[y+1,])
y <- sample(0:1, 1, prob = YtoX[x+1,])
gibbs_sampled[k,] <- c(x, y)
}
return(gibbs_sampled)
}
powermat <- function(mat,k) {
if (k == 0) return (diag(dim(mat)[1]))
if (k == 1) return(mat)
if (k > 1) return( mat %*% powermat(mat, k-1))
}
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
XtoY <- transition_matrix(t(xy_joint))
YtoX <- transition_matrix(xy_joint)
nburnin <- 3000
nsample <- 10^4
iter <- nburnin + nsample
set.seed(17)
gibbs_sample_data <- data.frame(gibbs_sampling(XtoY, YtoX, 1, iter))
gibbs_sample_data
names(gibbs_sample_data)<-c("Y","X")
table(gibbs_sample_data[(nburnin+1):(iter),])/nsample
sample_joint = gibbs_sample_data[(nburnin+1):(iter),]/nsample
sample_joint
sample_joint = table(gibbs_sample_data[(nburnin+1):(iter),])/nsample
sample_joint
sample_x_marginal <- matrix(apply(sample_joint, 1, sum),1,3)
x_marginal <- matrix(apply(xy_joint, 1, sum), 1, 3)
sample_x_marginal
x_marginal
xy_joint
sample_joint
rm(list=ls())
transition_matrix <- function(joint){
n <- length(joint[,1])
t_mat <- joint
for (i in 1:n){
t_mat[i,] <- joint[i,]/sum(joint[i,])
}
return(t_mat)
}
gibbs_sampling <- function(XtoY, YtoX, y = 1, iter){
gibbs_sampled <- matrix(0, iter, 2)
for(k in 1:iter){
x <- sample(0:2, 1, prob = XtoY[y+1,])
y <- sample(0:1, 1, prob = YtoX[x+1,])
gibbs_sampled[k,] <- c(x, y)
}
return(gibbs_sampled)
}
xy_joint <- matrix(c(0.15, 0.15, 0.15, 0.15, 0.2, 0.2), 3, 2, byrow=F)
dimnames(xy_joint)[[1]]<-0:2
dimnames(xy_joint)[[2]]<-0:1
XtoY <- transition_matrix(t(xy_joint))
YtoX <- transition_matrix(xy_joint)
nburnin <- 3000
nsample <- 10^4
iter <- nburnin + nsample
set.seed(17)
gibbs_sample_data <- data.frame(gibbs_sampling(XtoY, YtoX, 1, iter))
gibbs_sample_data
names(gibbs_sample_data)<-c("Y","X")
sample_joint = table(gibbs_sample_data[(nburnin+1):(iter),])/nsample
sample_x_marginal <- matrix(apply(sample_joint, 1, sum),1,3)
x_marginal <- matrix(apply(xy_joint, 1, sum), 1, 3)
dimnames(sample_x_marginal)[[2]] <- 0:2
dimnames(sample_x_marginal)[[1]] <- "probs"
dimnames(x_marginal)[[2]] <- 0:2
dimnames(x_marginal)[[1]] <- "probs"
sample_y_marginal <- matrix(apply(sample_joint, 2, sum),1,2)
y_marginal <- matrix(apply(xy_joint, 2, sum), 1, 2)
dimnames(sample_y_marginal)[[2]] <- 0:1
dimnames(sample_y_marginal)[[1]] <- "probs"
dimnames(y_marginal)[[2]] <- 0:1
dimnames(y_marginal)[[1]] <- "probs"
sample_joint
xy_joint
sample_x_marginal
x_marginal
sample_y_marginal
y_marginal
rm(list=ls())
theta = c(0:1:0.1)
## 3.1 - (b) ##
theta = seq(0, 1, 0.1)
theta = seq(0, 1, 0.1)
for(i in 1:11){
probs <- pbinom(57, 100, theta[i])
}
plot(theta, probs)
## 3.1 - (b) ##
theta <- seq(0, 1, 0.1)
probs <- rep(0, 11)
for(i in 1:11){
probs[i] <- pbinom(57, 100, theta[i])
}
## 3.1 - (b) ##
theta <- seq(0, 1, 0.1)
probs <- rep(0, 11)
for(i in 1:11){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs)
## 3.1 - (b) ##
theta <- seq(0, 1, 0.0001)
probs <- rep(0, length(theta))
for(i in 1:11){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs)
## 3.1 - (b) ##
theta <- seq(0, 1, 0.01)
probs <- rep(0, length(theta))
for(i in 1:11){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs)
## 3.1 - (b) ##
theta <- seq(0, 1, 0.001)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs)
## 3.1 - (b) ##
theta <- seq(0, 1, 0.01)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs)
## 3.1 - (b) ##
theta <- seq(0, 1, 0.1)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs)
?plot
## 3.1 - (b) ##
theta <- seq(0, 1, 0.1)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs, main="Probability Y=57 given theta", xlab="theta", ylab="probability",
pch=".")
plot(theta, probs, main="Probability Y=57 given theta", xlab="theta", ylab="probability",
pch="*")
plot(theta, probs, main="Probability Y=57 given theta", xlab="theta", ylab="probability",
pch="@")
plot(theta, probs, main="Probability \sum Y=57 given theta", xlab="theta", ylab="probability",
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="@")
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="hi")
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="@")
posterior <- rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- probs[i]/sum(probs)
}
plot(theta, posterior, main="Posterior given theta", xlab="theta", ylab="posterior",
pch="@")
## 3.1 - (b) ##
theta <- seq(0, 1, 0.01)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="@")
## 3.1 - (c) ##
posterior <- rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- probs[i]/sum(probs)
}
plot(theta, posterior, main="Posterior given theta", xlab="theta", ylab="posterior",
pch="@")
## 3.1 - (b) ##
theta <- seq(0, 1, 0.01)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="@")
## 3.1 - (c) ##
posterior <- rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- probs[i]/sum(probs)
}
plot(theta, posterior, main="Posterior given theta", xlab="theta", ylab="posterior",
pch="@")
## 3.1 - (b) ##
theta <- seq(0, 1, 0.1)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="@")
## 3.1 - (c) ##
posterior <- rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- probs[i]/sum(probs)
}
plot(theta, posterior, main="Posterior given theta", xlab="theta", ylab="posterior",
pch="@")
plot(theta, dbeta(theta, 58, 44))
plot(theta, dbeta(theta, 58, 44))
## 3.1 - (b) ##
theta <- seq(0, 1, 0.01)
theta <- seq(0, 1, 0.01)
probs <- rep(0, length(theta))
for(i in 1:length(theta)){
probs[i] <- dbinom(57, 100, theta[i])
}
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="@")
## 3.1 - (c) ##
posterior <- rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- probs[i]/sum(probs)
}
plot(theta, posterior, main="Posterior given theta", xlab="theta", ylab="posterior",
pch="@")
plot(theta, dbeta(theta, 58, 44))
plot(theta, posterior, main="Posterior given theta", xlab="theta", ylab="posterior",
pch="@")
plot(theta, probs, main="Probability sum(Y)=57 given theta", xlab="theta", ylab="probability",
pch="@")
## 3.1 - (d) ##
uniform_theta <- runif(30)
plot(uniform_theta, uniform_theta * dbinom(57, 100, uniform_theta))
## 3.1 - (e) ##
plot(theta, dbeta(theta, 58, 44))
plot(theta, posterior, main="Posterior given theta", xlab="theta", ylab="posterior",
pch="@")
